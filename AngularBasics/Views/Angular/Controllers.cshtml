
@{
    ViewData["Title"] = "Controllers";
}
<script type="text/javascript" src="~/lib/angular/angular.min.js"></script>
<h2>Controllers</h2>
<div ng-app="myApp" ng-controller="namesCtrl">

    <ul>
        <li ng-repeat="x in names">
            {{ x.name + ', ' + x.country }}
        </li>
    </ul>

</div>

<script src="~/js/namesController.js" type="text/javascript"></script>



@*<div ng-app="myApp" ng-controller="personCtrl">

        First Name: <input type="text" ng-model="firstName"><br>
        Last Name: <input type="text" ng-model="lastName"><br>
        <br>
        Full Name: {{fullName()}}

    </div>

    <script src="~/js/personController.js"></script>*@

@*

    AngularJS Controllers
        - AngularJS controllers control the data of AngularJS applications.
        - AngularJS controllers are regular JavaScript Objects.
        - The ng-controller directive defines the application controller.


    The AngularJS application is defined by  ng-app="myApp". The application runs inside the <div>
    The ng-controller="myCtrl" attribute is an AngularJS directive. It defines a controller.
    <div ng-app="myApp" ng-controller="myCtrl">
        //The myCtrl function is a JavaScript function.
        //The ng-model directives bind the input fields to the controller properties (firstName and lastName).
        First Name: <input type="text" ng-model="firstName"><br>
        Last Name: <input type="text" ng-model="lastName"><br>
        <br>
        Full Name: {{firstName + " " + lastName}}

    </div>

    <script>
        //AngularJS will invoke the controller with a $scope object.
        //In AngularJS, $scope is the application object (the owner of application variables and functions).
        var app = angular.module('myApp', []);
        app.controller('myCtrl', function ($scope) {
            //The controller creates two properties (variables) in the scope (firstName and lastName).
            $scope.firstName = "John";
        });
    </script>

    Controller Methods
        - A controller can also have methods (variables as functions):

        $scope.fullName = function() {
            return $scope.firstName + " " + $scope.lastName;
        };

    Controllers In External Files

*@
