
@{
    ViewData["Title"] = "DataBinding";
}
<script type="text/javascript" src="~/lib/angular/angular.min.js"></script>

<h2>Data Binding</h2>


<div ng-app="myApp" ng-controller="myCtrl">
    <h1 ng-click="changeName()">{{firstname}}</h1>
</div>

<script>
    var app = angular.module('myApp', []);
    app.controller('myCtrl', function ($scope) {
        $scope.firstname = "John";
        $scope.changeName = function () {
            $scope.firstname = "Nelly";
        }
    });
</script>


@*
    AngularJS Data Binding
    - Data binding in AngularJS is the synchronization between the model and the view.

    Data Model
    - AngularJS applications usually have a data model. The data model is a collection of data available for the application.

    var app = angular.module('myApp', []);
        app.controller('myCtrl', function($scope) {
        $scope.firstname = "John";
        $scope.lastname = "Doe";
    });

    HTML View
    - The HTML container where the AngularJS application is displayed, is called the view.
    - The view has access to the model, and there are several ways of displaying model data in the view.
    - You can use the ng-bind directive, which will bind the innerHTML of the element to the specified model property:

    <p ng-bind="firstname"></p>
    <p>First name: {{firstname}}</p>

    The ng-model Directive
    - Use the ng-model directive to bind data from the model to the view on HTML controls (input, select, textarea)
    <input ng-model="firstname">

    Two-way Binding
        - Data binding in AngularJS is the synchronization between the model and the view.
        - When data in the model changes, the view reflects the change, and when data in the view changes, the model is updated as well.
        - This happens immediately and automatically, which makes sure that the model and the view is updated at all times.

    AngularJS Controller
        - Applications in AngularJS are controlled by controllers.

*@

